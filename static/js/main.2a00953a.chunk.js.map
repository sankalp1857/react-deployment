{"version":3,"sources":["common/mqttconnection.js","config/config.js","components/Cards/Cards.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/FlotChart/FinalChart.jsx","Pages/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["config","require","energyAuditorv1","Paho","mqtt","host","hostUrl","port","client","Client","module","exports","mqttConnection","options","keepalive","clientId","Math","random","toString","substr","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","console","log","connect","on","subscribe","subscribeTopic","message","packet","concat","localStorage","setItem","err","end","publishData","id","epochTime","Date","now","pos","parseInt","getItem","publish","publishTopic","JSON","stringify","Cards","_ref","Source","Energy","_useState","useState","_useState2","_slicedToArray","energy","setEnergy","_useState3","_useState4","powerP1","setPowerP1","_useState5","_useState6","powerP2","setPowerP2","_useState7","_useState8","powerP3","setPowerP3","_useState9","_useState10","currentP1","setCurrentP1","_useState11","_useState12","currentP2","setCurrentP2","_useState13","_useState14","currentP3","setCurrentP3","_useState15","_useState16","voltageP1","setVoltageP1","_useState17","_useState18","voltageP2","setVoltageP2","_useState19","_useState20","voltageP3","setVoltageP3","useEffect","interval","setInterval","storedValue","jsonData","parse","data","i","length","PID","P","I","V","clearInterval","_jsxs","className","children","_jsx","style","width","FontAwesomeIcon","icon","faPowerOff","faPlugCircleBolt","faBolt","Navbar","src","alt","height","weight","type","marginRight","href","Footer","backgroundColor","GraphFinal","power1","power2","power3","timeData","setTimeData","powerData","setPowerData","chartID","source","timeString","toLocaleTimeString","prevtimeData","_toConsumableArray","slice","prevPowerData","Plotly","newPlot","x","y","fill","fillcolor","mode","name","marker","color","line","title","xaxis","linecolor","gridcolor","standoff","tickmode","nticks","yaxis","displayModeBar","displaylogo","paper_bgcolor","plot_bgcolor","autosize","bordercolor","borderwidth","Home","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","mqttConnect"],"mappings":"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","file":"static/js/main.2a00953a.chunk.js","sourcesContent":["const config = require(\"../config/config\").energyAuditorv1;\nconst Paho = require(\"paho-mqtt\");\nconst mqtt = require('mqtt');\n\nconst host = config.hostUrl;\nconst port = config.port;\nconst client = new Paho.Client(host, port, \"\");\n\nfunction mqttConnection() {\n\n\n  const clientId = 'mqttjs_' + Math.random().toString(16).substr(2, 8)\n    const host = 'wss://broker.emqx.io:8084/mqtt'\n    const options = {\n      keepalive: 60,\n      clientId: clientId,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n    }\n    console.log('Connecting mqtt client')\n    const client = mqtt.connect(host, options)\n    client.on('connect', () =>{\n        console.log(\"connected\");\n        client.subscribe(config.subscribeTopic);\n    });\n\nclient.on('message', (topic, message, packet) => {\n  console.log(`Received Message: ${message.toString()} On topic: ${topic}`)\n  localStorage.setItem(\"mqttMessage\", message.toString());\n})\n\n    // client.on('message', () => {\n    //   console.log(\"Message received:\", message.toString());\n    // localStorage.setItem(\"mqttMessage\", message.payloadString);\n    // })\n    client.on('error', (err) => {\n      console.log('Connection error: ', err)\n      client.end()\n    })\n    client.on('reconnect', () => {\n      console.log('Reconnecting...')\n    })\n  // console.log(\"Connecting to MQTT Broker.....\");\n\n  // client.onConnectionLost = onConnectionLost;\n\n  // client.onMessageArrived = onMessageArrived;\n\n  // client.connect({\n  //   onSuccess: onConnect,\n  //   userName: config.username,\n  //   password: config.password,\n  // });\n\n  // function onConnect() {\n  //   console.log(\"Connected!\");\n  //   client.subscribe(config.subscribeTopic);\n  // }\n\n  // function onMessageArrived(message) {\n  //   console.log(\"Message received:\", message.payloadString);\n  //   localStorage.setItem(\"mqttMessage\", message.payloadString);\n  // }\n\n  // function onConnectionLost(responseObject) {\n  //   if (responseObject.errorCode !== 0) {\n  //     console.log(\"Connection lost:\", responseObject.errorMessage);\n  //   }\n  // }\n}\n\nfunction publishData() {\n  let packet = {\n    id: \"90BCDA070\",\n    epochTime: Date.now(),\n    pos: parseInt(localStorage.getItem(\"state\")),\n  };\n  client.publish(config.publishTopic, JSON.stringify(packet));\n  console.log(\"sent packet: \" + JSON.stringify(packet));\n}\n\nmodule.exports = { mqttConnection, publishData };\n","module.exports = {\n    \"energyAuditorv1\": {\n        \"hostUrl\" : \"broker.emqx.io\",\n        \"port\" : 8084,\n        \"username\" : \"demo\",\n        \"password\" : \"demo\",\n        \"topic\" : \"ip/eatest\",\n        \"reconnectTimeout\" : 2000,\n        \"subscribeTopic\" : \"ip/ea/dashboard/demo\",\n        \"publishTopic\" : \"ip/ea/config\"\n    }\n}","import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlugCircleBolt,\r\n  faPowerOff,\r\n  faBolt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Cards = ({Source, Energy}) => {\r\n\r\n  const [energy, setEnergy] = useState(0);\r\n  const [powerP1, setPowerP1] = useState(0);\r\n  const [powerP2, setPowerP2] = useState(0);\r\n  const [powerP3, setPowerP3] = useState(0);\r\n  const [currentP1, setCurrentP1] = useState(0);\r\n  const [currentP2, setCurrentP2] = useState(0);\r\n  const [currentP3, setCurrentP3] = useState(0);\r\n  const [voltageP1, setVoltageP1] = useState(0);\r\n  const [voltageP2, setVoltageP2] = useState(0);\r\n  const [voltageP3, setVoltageP3] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const storedValue = localStorage.getItem(\"mqttMessage\");\r\n\r\n      if (storedValue != null) {\r\n        const jsonData = JSON.parse(storedValue).data;\r\n        setEnergy(jsonData[Energy]);\r\n\r\n        for (let i = 0; i < (jsonData[Source]).length; i++) {\r\n          const phaseId = jsonData[Source][i].PID;\r\n          switch (phaseId) {\r\n            case \"1\":\r\n              setPowerP1(jsonData[Source][i].P);\r\n              setCurrentP1(jsonData[Source][i].I);\r\n              setVoltageP1(jsonData[Source][i].V);\r\n              break;\r\n\r\n            case \"2\":\r\n              setPowerP2(jsonData[Source][i].P);\r\n              setCurrentP2(jsonData[Source][i].I);\r\n              setVoltageP2(jsonData[Source][1].V);\r\n              break;\r\n\r\n            case \"3\":\r\n              setPowerP3(jsonData[Source][i].P);\r\n              setCurrentP3(jsonData[Source][i].I);\r\n              setVoltageP3(jsonData[Source][i].V);\r\n              break;\r\n\r\n            default:\r\n              console.log(\"Invalid PhaseID\");\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flashCards row\" id=\"parameterCards\">\r\n   \r\n      <div className=\"card\" style={{\"width\": \"32vh\"}} id='sourceControl'>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{Source === \"source1\" ? \"Source 1\" : \"Source 2\"} </h5>\r\n            <br></br>\r\n            <h5 className=\"card-title\">Energy : {energy} units</h5>\r\n          </div>\r\n      </div>\r\n\r\n      {/* Phase Parameters- Power, Current and Voltage values for each phase are displayed in separate cards */}\r\n      {/* Phase 1 parameters */}\r\n      <div className=\"card\" id=\"Phase1\" style={{ width: \"32vh\" }}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Phase 1</h5>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faPowerOff} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Power1\">\r\n                  {powerP1} kW\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faPlugCircleBolt} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Current1\">\r\n                  {currentP1} A\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faBolt} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Voltage1\">\r\n                  {voltageP1} V\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Phase 2 parameters */}\r\n      <div className=\"card\" id=\"Phase2\" style={{ width: \"32vh\" }}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Phase 2</h5>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faPowerOff} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Power2\">\r\n                  {powerP2} kW\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faPlugCircleBolt} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Current2\">\r\n                  {currentP2} A\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faBolt} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Voltage2\">\r\n                  {voltageP2} V\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Phase 3 parameters */}\r\n      <div className=\"card\" id=\"Phase3\" style={{ width: \"32vh\" }}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Phase 3</h5>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faPowerOff} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Power3\">\r\n                  {powerP3} kW\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faPlugCircleBolt} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Current3\">\r\n                  {currentP3} A\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <FontAwesomeIcon icon={faBolt} />\r\n                </td>\r\n                <td className=\"parameter\" id=\"Voltage3\">\r\n                  {voltageP3} V\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    // Navbar fixed\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <p className=\"navbar-brand\">\r\n        <img\r\n          className=\"nav-logo\"\r\n          src=\"havellslogo.png\"\r\n          alt=\"\"\r\n          style={{ height: \"40px\", weight: \"40px\" }}\r\n        />\r\n      </p>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      {/* collapse-expand icon */}\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav mx-auto\">\r\n          <li className=\"nav-item active\">\r\n            <h4 className=\"nav-link title\">Energy Auditor IP Dashboard</h4>\r\n          </li>\r\n        </ul>\r\n\r\n        {/* Device Name   */}\r\n        <div className=\"dropdown my-2 my-lg-0\" style={{ marginRight: \"1%\" }}>\r\n          <button className=\"btn btn-secondary dropdown-toggle bg-transparent border-0 deviceID\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          981DA67BC82981343ADCBF6987F008D1EADBFC\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <li><a className=\"dropdown-item\" href=\"#\">684DA67BC82981343ADCBF6987F008D1EADBFC</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">781DA67BC82981343ADCBF6987F008D1EADBFC</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"#\">587DA67BC82981343ADCBF6987F008D1EADBFC</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;","import React from 'react'\r\nimport './footer.css'\r\n\r\nconst Footer = () => {\r\n  // copyright footer\r\n  return (\r\n    <div className=\"text-center\" id='footer' style={{backgroundColor: 'rgba(0, 0, 0, 0.1)'}}>\r\n        <p>© 2023 Copyright: Havells India Ltd.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useEffect, useState } from \"react\";\r\nimport Plotly from \"plotly.js-dist\";\r\n\r\nconst GraphFinal = ({Source, id}) => {\r\n  const [timeData, setTimeData] = useState([]); // x-axis data time line\r\n  const [powerData, setPowerData] = useState([[], [], []]); // y-axis power values\r\n  const chartID = id;\r\n  const source = (Source === \"source1\" ? \"Source 1\" : \"Source 2\");\r\n  var power1, power2, power3; \r\n\r\n  // display 15 datapoints at a time, and update the graph every 1s\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const storedValue = localStorage.getItem(\"mqttMessage\");\r\n      if (storedValue != null) {\r\n        const jsonData = JSON.parse(storedValue).data;\r\n\r\n        for(let i = 0; i < (jsonData[Source]).length; i++) {\r\n          const phaseId = jsonData[Source][i].PID;\r\n          switch(phaseId) {\r\n            case \"1\":\r\n              power1 = jsonData[Source][i].P;\r\n              break;\r\n\r\n            case \"2\":\r\n              power2 = jsonData[Source][i].P;\r\n              break;\r\n\r\n            case \"3\":\r\n              power3 = jsonData[Source][i].P;\r\n              break;\r\n\r\n            default:\r\n              console.log(\"Invalid PhaseID\");\r\n          }\r\n        }\r\n      }\r\n\r\n      const now = new Date();\r\n      const timeString = now.toLocaleTimeString();\r\n      setTimeData((prevtimeData) => [...prevtimeData, timeString].slice(-30));\r\n      setPowerData((prevPowerData) => [\r\n        [...prevPowerData[0], power1].slice(-30), // phase 1 power\r\n        [...prevPowerData[1], power2].slice(-30), // phase 2 power\r\n        [...prevPowerData[2], power3].slice(-30), // phase 3 power\r\n      ]);\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // plotting 3 data in a single graph as 3 flot charts for phases 1, 2 and 3\r\n  useEffect(() => {\r\n    Plotly.newPlot(\r\n      chartID,\r\n      [\r\n        {\r\n          x: timeData,\r\n          y: powerData[0],\r\n          type: \"scatter\",\r\n          fill: \"tozeroy\",\r\n          fillcolor: \"rgba(28, 122, 176, 0.6)\",\r\n          mode: \"lines\",\r\n          name: \"Phase 1\",\r\n          marker: { color: \"#459ed1\", line: { color: \"#1c7ab0\" } },\r\n        },\r\n        {\r\n          x: timeData,\r\n          y: powerData[1],\r\n          type: \"scatter\",\r\n          fill: \"tozeroy\",\r\n          fillcolor: \"rgba(28, 122, 176, 0.4)\",\r\n          mode: \"lines\",\r\n          name: \"Phase 2\",\r\n          marker: { color: \"#459ed1\", line: { color: \"#1c7ab0\" } },\r\n        },\r\n        {\r\n          x: timeData,\r\n          y: powerData[2],\r\n          type: \"scatter\",\r\n          fill: \"tozeroy\",\r\n          fillcolor: \"rgba(28, 122, 176, 0.2)\",\r\n          mode: \"lines\",\r\n          name: \"Phase 3\",\r\n          marker: { color: \"#459ed1\", line: { color: \"#1c7ab0\" } },\r\n        },\r\n      ],\r\n      // plot layout settings\r\n      {\r\n        title: \"Power Representation: \" + source,\r\n        xaxis: {\r\n          title: \"Time\",\r\n          linecolor: \"gray\",\r\n          gridcolor: \"lightgray\",\r\n          standoff: 50,\r\n          tickmode: \"auto\",\r\n          nticks: 6\r\n        },\r\n        yaxis: {\r\n          title: \"Power (kW)\",\r\n          linecolor: \"gray\",\r\n          color: \"gray\",\r\n          gridcolor: \"lightgray\",\r\n        },\r\n        config: {\r\n          displayModeBar: false, // hide the modebar on hover\r\n          displaylogo: false,\r\n        },\r\n        paper_bgcolor: \"rgba(0,0,0,0)\",\r\n        plot_bgcolor: \"rgba(0,0,0,0)\",\r\n        autosize: true,\r\n        bordercolor: \"black\",\r\n        borderwidth: 2,\r\n      }\r\n    );\r\n  }, [timeData, powerData]);\r\n\r\n  // graph is drawn inside this div component\r\n  return (\r\n    <div className=\"graph\">\r\n      <div id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphFinal;\r\n","import React from 'react'\r\nimport Cards from '../components/Cards/Cards';\r\nimport Navbar from '../components/Navbar/Navbar';\r\nimport Footer from '../components/Footer/Footer';\r\nimport GraphFinal from '../components/FlotChart/FinalChart';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='Home' id='Home'>\r\n        <Navbar/>\r\n        <div className='row'>\r\n        <div className='mainSection' id='mainSection'>  \r\n            <Cards Source={\"source1\"} Energy={\"energy1\"}/>\r\n            <Cards Source={\"source2\"} Energy={\"energy2\"}/>\r\n            <GraphFinal Source={\"source1\"} id={\"chart1\"}/>\r\n            <GraphFinal Source={\"source2\"} id={\"chart2\"}/>\r\n        </div>\r\n        <Footer/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home","import \"./App.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport mqttConnect from '../src/common/mqttconnection';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nmqttConnect.mqttConnection();\n\nreportWebVitals();\n"],"sourceRoot":""}